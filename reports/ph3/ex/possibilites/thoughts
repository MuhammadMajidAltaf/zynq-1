analysing func: partial_unrolled@4c
[{:start=>52,
  :end=>64,
  :func=>"rolled",
  :bbs=>
   [{:func=>"rolled",
     :addr=>40,
     :size=>5,
     :code=>
      [{:addr=>48,
        :raw=>"e3a03000",
        :instr=>"mov",
        :args=>["r3", "#0"],
        :branch=>{:base=>nil, :offset=>nil, :absolute=>nil}},
       {:addr=>52,
        :raw=>"e2833001",
        :instr=>"add",
        :args=>["r3", "r3", "#1"],
        :branch=>{:base=>nil, :offset=>nil, :absolute=>nil}},
       {:addr=>56,
        :raw=>"e1530002",
        :instr=>"cmp",
        :args=>["r3", "r2"],
        :branch=>{:base=>nil, :offset=>nil, :absolute=>nil}},
       {:addr=>60,
        :raw=>"e02c0c91",
        :instr=>"mla",
        :args=>["ip", "r1", "ip", "r0"],
        :branch=>{:base=>nil, :offset=>nil, :absolute=>nil}},
       {:addr=>64,
        :raw=>"1afffffb",
        :instr=>"bne",
        :args=>["34 <rolled+0xc>"],
        :branch=>{:base=>"rolled", :offset=>12, :absolute=>52}}],
     :prof=>nil}]},


48 mov r3, #0
52 add r3, r3, #1
56 cmp r3, r2
60 mla ip, r1, ip, r0
64 bne 52

Parts: Initialization, Counter, Compare, Work, Branch

Need to notice that r3 is the loop counter here. (Should always be a register so this is a good hint)
Can see this because:
- Initialized by the mov immediate (i=0)
- Constant arithmetic change every iteration (i += 1)
- Used in the cmp for the loop test (know this is the relevant one, as the last one before the bne)

Algorithm:
1) Work backwards from the branch, find relevant cmp, record which registers are used
2) Work forwards from start of loop, looking for arithmetic operation (add/sub/etc.) with constant change (immediate). Cross-reference the registers with those used in the relevant cmp to find the loop register
2.5) Find anything else acting on this register, which would indicate a complex loop counter operation
3) Find loop counter initialization, by working backwards from the start of the loop for a mov into that register
3.5) Might be a load instead, but can't cope with them for a while
4) Conclude that any code between the determined sections must be the loop body, and any other remaining code in this BB before the loop start is body initialization code
