%!PS-Adobe-2.0 EPSF-2.0
%%Title: fig/x264:pow:333.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Fri Feb 27 21:23:17 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fig/x264:pow:333.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (ali)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Feb 27 21:23:17 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
798 280 M
63 0 V
6086 0 R
-63 0 V
stroke
714 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 854 M
63 0 V
6086 0 R
-63 0 V
stroke
714 854 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 1428 M
63 0 V
6086 0 R
-63 0 V
stroke
714 1428 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 2002 M
63 0 V
6086 0 R
-63 0 V
stroke
714 2002 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 2576 M
63 0 V
6086 0 R
-63 0 V
stroke
714 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 3149 M
63 0 V
6086 0 R
-63 0 V
stroke
714 3149 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 3723 M
63 0 V
6086 0 R
-63 0 V
stroke
714 3723 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 350000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 4297 M
63 0 V
6086 0 R
-63 0 V
stroke
714 4297 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 4871 M
63 0 V
6086 0 R
-63 0 V
stroke
714 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 450000)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
798 280 M
0 63 V
0 4528 R
0 -63 V
stroke
798 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1481 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1481 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2164 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2164 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2848 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2848 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3531 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3531 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4214 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4214 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4897 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4897 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5581 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5581 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6264 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6264 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6947 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.42203e+15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
798 4871 N
798 280 L
6149 0 V
0 4591 V
-6149 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
6296 4738 M
[ [(Helvetica) 140.0 0.0 true true 0 (VCCPINT.P)]
] -46.7 MRshow
LT0
6380 4738 M
399 0 V
895 3130 M
71 0 V
71 -11 V
71 191 V
71 -191 V
71 902 V
71 6 V
71 -185 V
71 6 V
71 521 V
72 11 V
71 -359 V
71 180 V
71 185 V
72 0 V
71 0 V
71 -196 V
72 196 V
71 -6 V
71 0 V
72 11 V
71 -11 V
71 -347 V
72 358 V
71 -364 V
72 -6 V
71 359 V
72 6 V
71 168 V
72 -174 V
71 185 V
71 -359 V
71 174 V
72 -179 V
71 -6 V
71 -179 V
71 196 V
71 -11 V
71 5 V
71 6 V
72 -11 V
71 -6 V
71 -5 V
71 16 V
71 185 V
71 0 V
71 -190 V
71 179 V
71 6 V
72 -191 V
72 185 V
71 -174 V
71 174 V
71 -174 V
71 -5 V
71 11 V
72 -185 V
71 174 V
71 -6 V
71 185 V
71 6 V
71 0 V
71 -174 V
145 -902 V
73 -185 V
71 5 V
71 0 V
71 -5 V
71 -180 V
70 348 V
71 -174 V
71 -179 V
71 5 V
71 -11 V
71 196 V
70 174 V
71 -179 V
71 -353 V
71 347 V
71 191 V
895 3130 Pls
966 3130 Pls
1037 3119 Pls
1108 3310 Pls
1179 3119 Pls
1250 4021 Pls
1321 4027 Pls
1392 3842 Pls
1463 3848 Pls
1534 4369 Pls
1606 4380 Pls
1677 4021 Pls
1748 4201 Pls
1819 4386 Pls
1891 4386 Pls
1962 4386 Pls
2033 4190 Pls
2105 4386 Pls
2176 4380 Pls
2247 4380 Pls
2319 4391 Pls
2390 4380 Pls
2461 4033 Pls
2533 4391 Pls
2604 4027 Pls
2676 4021 Pls
2747 4380 Pls
2819 4386 Pls
2890 4554 Pls
2962 4380 Pls
3033 4565 Pls
3104 4206 Pls
3175 4380 Pls
3247 4201 Pls
3318 4195 Pls
3389 4016 Pls
3460 4212 Pls
3531 4201 Pls
3602 4206 Pls
3673 4212 Pls
3745 4201 Pls
3816 4195 Pls
3887 4190 Pls
3958 4206 Pls
4029 4391 Pls
4100 4391 Pls
4171 4201 Pls
4242 4380 Pls
4313 4386 Pls
4385 4195 Pls
4457 4380 Pls
4528 4206 Pls
4599 4380 Pls
4670 4206 Pls
4741 4201 Pls
4812 4212 Pls
4884 4027 Pls
4955 4201 Pls
5026 4195 Pls
5097 4380 Pls
5168 4386 Pls
5239 4386 Pls
5310 4212 Pls
5455 3310 Pls
5528 3125 Pls
5599 3130 Pls
5670 3130 Pls
5741 3125 Pls
5812 2945 Pls
5882 3293 Pls
5953 3119 Pls
6024 2940 Pls
6095 2945 Pls
6166 2934 Pls
6237 3130 Pls
6307 3304 Pls
6378 3125 Pls
6449 2772 Pls
6520 3119 Pls
6591 3310 Pls
6579 4738 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
6296 4598 M
[ [(Helvetica) 140.0 0.0 true true 0 (VCCPAUX.P)]
] -46.7 MRshow
LT1
6380 4598 M
399 0 V
895 2292 M
71 -647 V
71 320 V
71 0 V
71 -320 V
71 322 V
71 -2 V
71 5 V
71 0 V
71 -3 V
72 -325 V
71 328 V
71 325 V
71 -330 V
72 316 V
71 -633 V
71 633 V
72 -5 V
71 -636 V
71 330 V
72 -322 V
71 639 V
71 -320 V
72 6 V
71 -8 V
72 -328 V
71 653 V
72 -653 V
71 644 V
72 -639 V
71 328 V
71 -11 V
71 656 V
72 -973 V
71 6 V
71 317 V
71 -642 V
71 642 V
71 0 V
71 0 V
72 325 V
71 -648 V
71 320 V
71 11 V
71 -3 V
71 0 V
71 -325 V
71 325 V
71 -328 V
72 328 V
72 -325 V
71 -11 V
71 336 V
71 0 V
71 0 V
71 -11 V
72 -314 V
71 0 V
71 645 V
71 -970 V
71 642 V
71 3 V
71 322 V
145 -320 V
73 3 V
71 -653 V
71 648 V
71 0 V
71 0 V
70 2 V
71 331 V
71 -333 V
71 0 V
71 -323 V
71 0 V
70 650 V
71 -647 V
71 328 V
71 305 V
71 -308 V
895 2292 Crs
966 1645 Crs
1037 1965 Crs
1108 1965 Crs
1179 1645 Crs
1250 1967 Crs
1321 1965 Crs
1392 1970 Crs
1463 1970 Crs
1534 1967 Crs
1606 1642 Crs
1677 1970 Crs
1748 2295 Crs
1819 1965 Crs
1891 2281 Crs
1962 1648 Crs
2033 2281 Crs
2105 2276 Crs
2176 1640 Crs
2247 1970 Crs
2319 1648 Crs
2390 2287 Crs
2461 1967 Crs
2533 1973 Crs
2604 1965 Crs
2676 1637 Crs
2747 2290 Crs
2819 1637 Crs
2890 2281 Crs
2962 1642 Crs
3033 1970 Crs
3104 1959 Crs
3175 2615 Crs
3247 1642 Crs
3318 1648 Crs
3389 1965 Crs
3460 1323 Crs
3531 1965 Crs
3602 1965 Crs
3673 1965 Crs
3745 2290 Crs
3816 1642 Crs
3887 1962 Crs
3958 1973 Crs
4029 1970 Crs
4100 1970 Crs
4171 1645 Crs
4242 1970 Crs
4313 1642 Crs
4385 1970 Crs
4457 1645 Crs
4528 1634 Crs
4599 1970 Crs
4670 1970 Crs
4741 1970 Crs
4812 1959 Crs
4884 1645 Crs
4955 1645 Crs
5026 2290 Crs
5097 1320 Crs
5168 1962 Crs
5239 1965 Crs
5310 2287 Crs
5455 1967 Crs
5528 1970 Crs
5599 1317 Crs
5670 1965 Crs
5741 1965 Crs
5812 1965 Crs
5882 1967 Crs
5953 2298 Crs
6024 1965 Crs
6095 1965 Crs
6166 1642 Crs
6237 1642 Crs
6307 2292 Crs
6378 1645 Crs
6449 1973 Crs
6520 2278 Crs
6591 1970 Crs
6579 4598 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
6296 4458 M
[ [(Helvetica) 140.0 0.0 true true 0 (VCCADJ.P)]
] -46.7 MRshow
LT2
6380 4458 M
399 0 V
895 610 M
71 0 V
71 -6 V
71 2 V
71 455 V
71 0 V
71 -453 V
71 2 V
71 0 V
71 -4 V
72 1 V
71 455 V
71 -451 V
71 0 V
72 -1 V
71 -2 V
71 2 V
72 -2 V
71 454 V
71 -456 V
72 907 V
71 -906 V
71 3 V
72 0 V
71 -3 V
72 -1 V
71 451 V
72 454 V
71 -450 V
72 -453 V
71 2 V
71 0 V
71 452 V
72 -452 V
71 0 V
71 -4 V
71 0 V
71 4 V
71 0 V
71 0 V
72 451 V
71 -451 V
71 0 V
71 0 V
71 901 V
71 -451 V
71 0 V
71 -452 V
71 453 V
72 -453 V
72 2 V
71 452 V
71 -452 V
71 -2 V
71 0 V
71 2 V
72 452 V
71 -454 V
71 0 V
71 -4 V
71 0 V
71 6 V
71 0 V
145 903 V
73 -903 V
71 -3 V
71 -1 V
71 451 V
71 -447 V
70 1 V
71 -1 V
71 0 V
71 0 V
71 450 V
71 -453 V
70 454 V
71 0 V
71 -451 V
71 -6 V
71 7 V
895 610 Star
966 610 Star
1037 604 Star
1108 606 Star
1179 1061 Star
1250 1061 Star
1321 608 Star
1392 610 Star
1463 610 Star
1534 606 Star
1606 607 Star
1677 1062 Star
1748 611 Star
1819 611 Star
1891 610 Star
1962 608 Star
2033 610 Star
2105 608 Star
2176 1062 Star
2247 606 Star
2319 1513 Star
2390 607 Star
2461 610 Star
2533 610 Star
2604 607 Star
2676 606 Star
2747 1057 Star
2819 1511 Star
2890 1061 Star
2962 608 Star
3033 610 Star
3104 610 Star
3175 1062 Star
3247 610 Star
3318 610 Star
3389 606 Star
3460 606 Star
3531 610 Star
3602 610 Star
3673 610 Star
3745 1061 Star
3816 610 Star
3887 610 Star
3958 610 Star
4029 1511 Star
4100 1060 Star
4171 1060 Star
4242 608 Star
4313 1061 Star
4385 608 Star
4457 610 Star
4528 1062 Star
4599 610 Star
4670 608 Star
4741 608 Star
4812 610 Star
4884 1062 Star
4955 608 Star
5026 608 Star
5097 604 Star
5168 604 Star
5239 610 Star
5310 610 Star
5455 1513 Star
5528 610 Star
5599 607 Star
5670 606 Star
5741 1057 Star
5812 610 Star
5882 611 Star
5953 610 Star
6024 610 Star
6095 610 Star
6166 1060 Star
6237 607 Star
6307 1061 Star
6378 1061 Star
6449 610 Star
6520 604 Star
6591 611 Star
6579 4458 Star
% End plot #3
1.000 UL
LTb
LCb setrgbcolor
798 4871 N
798 280 L
6149 0 V
0 4591 V
-6149 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
